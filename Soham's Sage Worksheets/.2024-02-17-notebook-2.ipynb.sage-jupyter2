{"backend_state":"running","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-6ac6046e-121c-4fe6-a6be-23761a62a04d.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"last_ipynb_save":1709338809958,"trust":true,"type":"settings"}
{"cell_type":"markdown","id":"0d01ce","input":"0216/examples","pos":-1,"type":"cell"}
{"end":1709336427520,"exec_count":7,"id":"adefcf","input":"#Our Original Example\nM = [[0,-1,0,1],[1,0,-1,0],[0,1,0,-1], [-1,0,1,0]]\nprint(is_3_cyclic(M))\nprint(is_4_cyclic(M))","kernel":"python3","output":{"0":{"name":"stdout","text":"False\nTrue\n"}},"pos":1,"start":1709336427516,"state":"done","type":"cell"}
{"end":1709336429168,"exec_count":8,"id":"bbbbc4","input":"#Mutatation at 1 of our original example, mutate at 3 also works. here we are mutating at 1 \nM = [[0,-1,0,1],[1,0,1,-1],[0,-1,0,1], [-1,1,1,0]]\nprint(is_3_cyclic(M))\nprint(is_4_cyclic(M))","kernel":"python3","output":{"0":{"name":"stdout","text":"True\nFalse\n"}},"pos":3,"start":1709336429165,"state":"done","type":"cell"}
{"end":1709336431157,"exec_count":9,"id":"270538","input":"#Mutatation at 2 of our original example\nM = [[0,1,-1,1],[-1,0,1,0],[1,-1,0,-1], [-1,0,1,0]]\nprint(is_3_cyclic(M))\nprint(is_4_cyclic(M))","kernel":"python3","output":{"0":{"name":"stdout","text":"True\nFalse\n"}},"pos":4,"start":1709336431155,"state":"done","type":"cell"}
{"end":1709336432490,"exec_count":10,"id":"7605eb","input":"#Mutatation at 3 of our original example\nM = [[0,-1,0,1],[1,0,1,-1],[0,-1,0,1], [-1,1,-1,0]]\nprint(is_3_cyclic(M))\nprint(is_4_cyclic(M))","kernel":"python3","output":{"0":{"name":"stdout","text":"True\nFalse\n"}},"pos":5,"start":1709336432488,"state":"done","type":"cell"}
{"end":1709336434183,"exec_count":11,"id":"f9d330","input":"#Mutatation at 4 of our original example\nM = [[0,-1,1,-1],[1,0,-1,0],[-1,1,0,1], [1,0,-1,0]]\nprint(is_3_cyclic(M))\nprint(is_4_cyclic(M))","kernel":"python3","output":{"0":{"name":"stdout","text":"True\nFalse\n"}},"pos":6,"start":1709336434179,"state":"done","type":"cell"}
{"end":1709336435808,"exec_count":12,"id":"8ba519","input":"#Mutatation at 3,4 of our original example -> acylic\nP = [[0,0,0,1],[0,0,0,-1],[0,0,0,1], [-1,1,-1,0]]\nprint(is_3_cyclic(P))\nprint(is_4_cyclic(P))","kernel":"python3","output":{"0":{"name":"stdout","text":"False\nFalse\n"}},"pos":7,"start":1709336435805,"state":"done","type":"cell"}
{"end":1709337112965,"exec_count":18,"id":"9cd1de","input":"import itertools\n\ndef mutate(M, i):\n    # Return M mutated at vertex i.\n    n = len(M)\n    M_ = [row[::] for row in M]\n    for j in range(len(M)):\n        for k in range(len(M)):\n            if j != k and M[j][i] > 0 and M[i][k] > 0:\n                print(j,k)\n                M_[j][k] += M[j][i] * M[i][k]\n                M_[k][j] -= M[j][i] * M[i][k]\n    for j in range(len(M)):\n        M_[j][i] *= -1\n        M_[i][j] *= -1\n    return M_\n\ndef is_3_cyclic(M):\n    # Returns whether M contains a 3 cycle or not.\n    n = len(M)\n    for (a,b,c) in itertools.permutations(range(n), 3):\n        if M[a][b] > 0 and M[b][c] > 0 and M[c][a] > 0:\n            return True\n    return False\n\ndef is_4_cyclic(M):\n    # Returns whether M contains a 4 cycle or not.\n    n = len(M)\n    for (a,b,c,d) in itertools.permutations(range(n), 4):\n        if M[a][b] > 0 and M[b][c] > 0 and M[c][d] > 0 and M[d][a] > 0:\n            return True\n    return False\n\nfor (a,b,c,d,e,f) in itertools.combinations(range(-10, 11), 6):\n    M = [\n        [0,  a,  b,  c],\n        [-a, 0,  d,  e],\n        [-b, -d, 0,  f],\n        [-c, -e, -f, 0],\n    ]","kernel":"python3","pos":0,"start":1709337112930,"state":"done","type":"cell"}
{"end":1709337113641,"exec_count":19,"id":"aba85c","input":"#Herman's Example\nM = [[0, -3, -3, -3], [3, 0, -3, 1], [3, 3, 0, -3], [3, -1, 3, 0]]\nprint(is_3_cyclic(M))\nprint(is_4_cyclic(M))","kernel":"python3","output":{"0":{"name":"stdout","text":"True\nFalse\n"}},"pos":0.5,"start":1709337113638,"state":"done","type":"cell"}
{"id":0,"time":1709336336080,"type":"user"}
{"last_load":1708129328142,"type":"file"}