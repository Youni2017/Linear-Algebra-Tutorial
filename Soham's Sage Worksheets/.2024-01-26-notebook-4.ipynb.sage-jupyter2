{"backend_state":"ready","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-2e495547-f022-402a-bfa5-b2424bec788b.json","kernel":"sage-10.1","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"last_ipynb_save":1709196183637,"trust":true,"type":"settings"}
{"cell_type":"markdown","exec_count":39,"id":"7433af","input":"## <span style='font-size:medium'>Now here is a function I wrote that represents the recursive nature of finding determinants using cofactor expansion</span>\n\n","kernel":"sage-10.1","pos":35,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"04e7dd","input":"<span style='font-size:large'>The addition equivalent of this property, namely, </span>$det(A+B) = det(A)+det(B)$<span style='font-size:large'> is not always true. Here's an example</span>\n","pos":14.5,"type":"cell"}
{"cell_type":"markdown","id":"0c1471","input":"## Some more properties\n\n","pos":39.5,"type":"cell"}
{"cell_type":"markdown","id":"0eccb9","input":"","pos":0,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"121c22","input":"","pos":22,"type":"cell"}
{"cell_type":"markdown","id":"245f28","input":"### <span style='font-size:large'>Now we are going to look at some interesting properties of Determinants. </span>\n\n## <span style='font-size:large'>The first property of determinants we are going to look at is </span>\n\n$det(A*B) = det(A) * det(B)$\n\n<span style='font-size:large'>And</span>\n\n$det(B*A) = det(B) * det(A)$\n\n","pos":7,"type":"cell"}
{"cell_type":"markdown","id":"2b7681","input":"<span style='font-size:large'>Now let's look at elementary matrices and their effect on the determinants</span>\n\n","pos":17,"type":"cell"}
{"cell_type":"markdown","id":"3a8fa1","input":"","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"7fb3eb","input":"### <span style='font-size:large'>Determinants of matrices can be calculated using something called the cofactor expansion method.</span>\n\n<span style='font-size:large'>Here is the formula: </span>\n\n$det(A) = a_{11}C_{11} + a_{12}C_{12} + ...  a_{1n}C_{1n}$\n\n<span style='font-size:large'>Where </span>$C_{11}...C_{1n}$<span style='font-size:large'> are the cofactors of </span>$a_{11}...a_{1n}$<span style='font-size:large'>.</span>\n\n<span style='font-size:large'>We can represent this using an example to see how sage calculates it</span>\n","pos":19.5,"type":"cell"}
{"cell_type":"markdown","id":"80fca8","input":"## Inverses from Determinants\n\n<span style='font-size:large'>In the textbook, we learn that If A is an invertible matrix, then </span>$A^{-1} = 1/det(A) * adj(A)$\n","pos":47.25,"type":"cell"}
{"cell_type":"markdown","id":"8b3ded","input":"![](.2024-01-26-notebook-4.ipynb.upload/paste-0.5911853387532666)\n","pos":5.5,"type":"cell"}
{"cell_type":"markdown","id":"8bfda2","input":"## $A^{T}$has the same Determinant\n\n","pos":44.25,"type":"cell"}
{"cell_type":"markdown","id":"b398aa","input":"<span style='font-size:large'>**Chapter 5: Determinants**</span><span style='font-size:large'> </span>\n\n<span style='font-size:large'>By: Soham Bhosale</span>\n\n<span style='font-size:large'>The determinant of a matrix is a single numerical value which is used when calculating the inverse or when solving systems of linear equations. Let's look at some basic examples first.</span>\n\n","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"b8fe5c","input":"Determinant of the inverse of a matrix is $1/det(A)$\n","pos":40.5,"type":"cell"}
{"cell_type":"markdown","id":"c70172","input":"","pos":19.75,"type":"cell"}
{"cell_type":"markdown","id":"ce11aa","input":"### Elementary Matrix Switching Rows\n\n<span style='font-size:medium'>The determinant of the matrix produced by interchanging two rows of the original matrix is \\-det\\(B\\)</span>\n","pos":29.5,"type":"cell"}
{"cell_type":"markdown","id":"d1553c","input":"### **Multiplying a row by a constant multiplies the determinant by that constnant c**\n\n","pos":31.25,"type":"cell"}
{"cell_type":"markdown","id":"d54cff","input":"<span style='font-size:medium'>Determinant does not change with when a new matrix is produced by adding one multiple of a row to another row</span>\n","pos":28.5,"type":"cell"}
{"cell_type":"markdown","id":"e52c7a","input":"<span style='font-size:large'>Can also see how elementary matrices change a matrix \\(row\\-operations\\)</span>\n\n","pos":23,"type":"cell"}
{"end":1706304343673,"exec_count":3,"id":"dfaf87","input":"A = Matrix(ZZ, [[-3,1,2],[5,5,-8],[4,2,-5]])\nA","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[-3  1  2]\n[ 5  5 -8]\n[ 4  2 -5]"},"exec_count":3}},"pos":2,"start":1706304343517,"state":"done","type":"cell"}
{"end":1706304354326,"exec_count":4,"id":"fed2ee","input":"A.det()","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"0"},"exec_count":4}},"pos":3,"start":1706304354278,"state":"done","type":"cell"}
{"end":1706304381411,"exec_count":8,"id":"a5dfa9","input":"B = Matrix(ZZ, [[4, -1, 1, 0],[1, 7, 3, 5],[0,-3, -2, 1], [2, 4, 8, -1]])\nB","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[ 4 -1  1  0]\n[ 1  7  3  5]\n[ 0 -3 -2  1]\n[ 2  4  8 -1]"},"exec_count":8}},"pos":4,"start":1706304381401,"state":"done","type":"cell"}
{"end":1706304384567,"exec_count":9,"id":"a44102","input":"B.det()","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"-413"},"exec_count":9}},"pos":5,"start":1706304384563,"state":"done","type":"cell"}
{"end":1706305076678,"exec_count":21,"id":"ca89bb","input":"E = elementary_matrix(3, row1 = 1, row2 = 2, scale = 4)\nE","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[1 0 0]\n[0 1 4]\n[0 0 1]"},"exec_count":21}},"pos":19,"start":1706305076656,"state":"done","type":"cell"}
{"end":1706307005170,"exec_count":27,"id":"325c57","input":"B=random_matrix(ZZ, 3, 3)\nB","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[  8   1  -2]\n[-12 -19   0]\n[ -1   0  -1]"},"exec_count":27}},"pos":26,"start":1706307005165,"state":"done","type":"cell"}
{"end":1706307033412,"exec_count":28,"id":"6aaa12","input":"E*B","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[  8   1  -2]\n[-16 -19  -4]\n[ -1   0  -1]"},"exec_count":28}},"pos":27,"start":1706307033408,"state":"done","type":"cell"}
{"end":1706307062923,"exec_count":32,"id":"e87b66","input":"det(E*B)","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"178"},"exec_count":32}},"pos":28,"start":1706307062919,"state":"done","type":"cell"}
{"end":1706307064416,"exec_count":33,"id":"f52fbe","input":"B.det()","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"178"},"exec_count":33}},"pos":29,"start":1706307064411,"state":"done","type":"cell"}
{"end":1706307075491,"exec_count":34,"id":"efa4d5","input":"F=elementary_matrix(3, row1=0, row2=2)\nF","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[0 0 1]\n[0 1 0]\n[1 0 0]"},"exec_count":34}},"pos":30,"start":1706307075480,"state":"done","type":"cell"}
{"end":1706307385338,"exec_count":35,"id":"a99897","input":"det(F*B)","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"-178"},"exec_count":35}},"pos":31,"start":1706307385323,"state":"done","type":"cell"}
{"end":1706307510641,"exec_count":36,"id":"51e81b","input":"G=elementary_matrix(3, row1=2, scale=5)\nG","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[1 0 0]\n[0 1 0]\n[0 0 5]"},"exec_count":36}},"pos":32,"start":1706307510636,"state":"done","type":"cell"}
{"end":1706307511880,"exec_count":37,"id":"0fbaa5","input":"B","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[  8   1  -2]\n[-12 -19   0]\n[ -1   0  -1]"},"exec_count":37}},"pos":33,"start":1706307511873,"state":"done","type":"cell"}
{"end":1706307572057,"exec_count":38,"id":"f850f2","input":"det(G*B)","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"890"},"exec_count":38}},"pos":34,"start":1706307572045,"state":"done","type":"cell"}
{"end":1706308189580,"exec_count":40,"id":"38a725","input":"def myDet(M):\n    if M.ncols() != M.nrows():\n        return(\"not a square matrix so no determinant\")\n    else: \n        col=M.ncols()\n        if col==1: \n            return M[0,0]\n        else:\n            D = 0\n            N=M.matrix_from_columns(range(1,col))\n            for i in range(col):\n                D=D + (-1)^i * M[i,0] * myDet(N.matrix_from_rows(list(range(i)) + list(range(i+1, col))))\n            return D","kernel":"sage-10.1","pos":36,"start":1706308189573,"state":"done","type":"cell"}
{"end":1706308266283,"exec_count":41,"id":"873619","input":"A=random_matrix(ZZ, 5,5)","kernel":"sage-10.1","pos":37,"start":1706308266275,"state":"done","type":"cell"}
{"end":1706308269618,"exec_count":42,"id":"bedde7","input":"det(A)","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"-4736"},"exec_count":42}},"pos":38,"start":1706308269613,"state":"done","type":"cell"}
{"end":1706308281577,"exec_count":44,"id":"d44b78","input":"myDet(A)","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"-4736"},"exec_count":44}},"pos":39,"start":1706308281520,"state":"done","type":"cell"}
{"end":1706311009921,"exec_count":50,"id":"811242","input":"A = Matrix(ZZ, [[3,1,0],[-1,2,1],[0,-1,2]])","kernel":"sage-10.1","pos":40,"start":1706311009915,"state":"done","type":"cell"}
{"end":1706311011537,"exec_count":51,"id":"ce3d39","input":"B= A.inverse()\nB","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[ 5/17 -2/17  1/17]\n[ 2/17  6/17 -3/17]\n[ 1/17  3/17  7/17]"},"exec_count":51}},"pos":41,"start":1706311011530,"state":"done","type":"cell"}
{"end":1706311025059,"exec_count":53,"id":"57a8a4","input":"det(A)","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"17"},"exec_count":53}},"pos":42,"start":1706311025056,"state":"done","type":"cell"}
{"end":1706311029332,"exec_count":54,"id":"c3b3c8","input":"det(B)","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"1/17"},"exec_count":54}},"pos":43,"start":1706311029327,"state":"done","type":"cell"}
{"end":1706311038788,"exec_count":55,"id":"010065","input":"A","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[ 3  1  0]\n[-1  2  1]\n[ 0 -1  2]"},"exec_count":55}},"pos":44,"start":1706311038778,"state":"done","type":"cell"}
{"end":1706311058158,"exec_count":58,"id":"3b5a22","input":"B= A.transpose()\nB","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[ 3 -1  0]\n[ 1  2 -1]\n[ 0  1  2]"},"exec_count":58}},"pos":45,"start":1706311058152,"state":"done","type":"cell"}
{"end":1706311063002,"exec_count":59,"id":"a0fd0e","input":"det(B)","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"17"},"exec_count":59}},"pos":46,"start":1706311062993,"state":"done","type":"cell"}
{"end":1706311066532,"exec_count":60,"id":"7f7f99","input":"det(A)","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"17"},"exec_count":60}},"pos":47,"start":1706311066525,"state":"done","type":"cell"}
{"end":1706311209407,"exec_count":61,"id":"449f33","input":"C=A.adjugate()\nC","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[ 5 -2  1]\n[ 2  6 -3]\n[ 1  3  7]"},"exec_count":61}},"pos":48,"start":1706311209163,"state":"done","type":"cell"}
{"end":1706311265727,"exec_count":63,"id":"4e1109","input":"D= 1/(det(A)) * C\nD","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[ 5/17 -2/17  1/17]\n[ 2/17  6/17 -3/17]\n[ 1/17  3/17  7/17]"},"exec_count":63}},"pos":49,"start":1706311265721,"state":"done","type":"cell"}
{"end":1706311281517,"exec_count":64,"id":"532771","input":"E = A.inverse()\nE","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[ 5/17 -2/17  1/17]\n[ 2/17  6/17 -3/17]\n[ 1/17  3/17  7/17]"},"exec_count":64}},"pos":50,"start":1706311281508,"state":"done","type":"cell"}
{"end":1706662760779,"exec_count":2,"id":"e697e1","input":"C=random_matrix(ZZ,4,4)\nC","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[-1  1 -1  1]\n[11  0 -3  4]\n[ 2  1 -1 -2]\n[ 0  1 -4 -1]"},"exec_count":2}},"pos":8,"start":1706662760775,"state":"done","type":"cell"}
{"end":1706662762572,"exec_count":3,"id":"07ef5b","input":"D=random_matrix(ZZ,4,4)\nD","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[  2   1  -1   0]\n[ 14 -47 -16  -1]\n[  1   1  -1   1]\n[ -1   4   1  -2]"},"exec_count":3}},"pos":9,"start":1706662762565,"state":"done","type":"cell"}
{"end":1706662764814,"exec_count":4,"id":"95b3bd","input":"C*D","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[ 10 -45 -13  -4]\n[ 15  24  -4 -11]\n[ 19 -54 -19   2]\n[ 11 -55 -13  -3]"},"exec_count":4}},"pos":10,"start":1706662764806,"state":"done","type":"cell"}
{"end":1706662767281,"exec_count":5,"id":"da0022","input":"det(C*D)","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"-22752"},"exec_count":5}},"pos":11,"start":1706662767278,"state":"done","type":"cell"}
{"end":1706662769594,"exec_count":6,"id":"66d9a1","input":"det(C) * det(D)","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"-22752"},"exec_count":6}},"pos":12,"start":1706662769587,"state":"done","type":"cell"}
{"end":1706662771391,"exec_count":7,"id":"25eedd","input":"D*C","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[   7    1   -4    8]\n[-563   -3  147 -141]\n[   8    1   -7    6]\n[  47   -2   -4   15]"},"exec_count":7}},"pos":13,"start":1706662771387,"state":"done","type":"cell"}
{"end":1706662773390,"exec_count":8,"id":"95955f","input":"det(D*C)","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"-22752"},"exec_count":8}},"pos":13.5,"start":1706662773382,"state":"done","type":"cell"}
{"end":1706662775423,"exec_count":9,"id":"544f3a","input":"det(D) * det(C)","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"-22752"},"exec_count":9}},"pos":14,"start":1706662775419,"state":"done","type":"cell"}
{"end":1706662777640,"exec_count":10,"id":"9d1bea","input":"print(\"det(C+D) = \", det(C + D))\nprint(\"det(C) + det(D) = \", det(C) + det(D))","kernel":"sage-10.1","output":{"0":{"name":"stdout","text":"det(C+D) =  1776\ndet(C) + det(D) =  -14\n"}},"pos":15,"start":1706662777636,"state":"done","type":"cell"}
{"end":1706662952506,"exec_count":12,"id":"f69fdf","input":"var('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i')\nA=matrix(3, 3, [a, b, c, d, e, f, g, h, i])\nA","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[a b c]\n[d e f]\n[g h i]"},"exec_count":12}},"pos":20,"start":1706662952461,"state":"done","type":"cell"}
{"end":1706662954192,"exec_count":13,"id":"d2a991","input":"A.det()","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"-(f*h - e*i)*a + (c*h - b*i)*d - (c*e - b*f)*g"},"exec_count":13}},"pos":21,"start":1706662954186,"state":"done","type":"cell"}
{"end":1706662956869,"exec_count":14,"id":"f354a7","input":"E = elementary_matrix(3, row1 = 1, row2 = 2, scale = 4)\nE","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[1 0 0]\n[0 1 4]\n[0 0 1]"},"exec_count":14}},"pos":24,"start":1706662956866,"state":"done","type":"cell"}
{"end":1706662958733,"exec_count":15,"id":"01b373","input":"E*A","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[      a       b       c]\n[d + 4*g e + 4*h f + 4*i]\n[      g       h       i]"},"exec_count":15}},"pos":25,"start":1706662958660,"state":"done","type":"cell"}
{"end":1706662960728,"exec_count":16,"id":"ca54f9","input":"A*E","kernel":"sage-10.1","output":{"0":{"data":{"text/plain":"[      a       b 4*b + c]\n[      d       e 4*e + f]\n[      g       h 4*h + i]"},"exec_count":16}},"pos":25.5,"start":1706662960716,"state":"done","type":"cell"}
{"end":1706663604897,"exec_count":17,"id":"47f9a0","input":"# Exercise 4 (c): Fill in entries for A and B to find a counterexample.\nA = Matrix(ZZ, [[_, _, _], [_, _, _], [_, _, _]])\nB = Matrix(ZZ, [[_, _, _], [_, _, _], [_, _, _]])\n\nA.determinant() - B.determinant() == (A-B).determinant()","kernel":"sage-10.1","output":{"0":{"ename":"TypeError","evalue":"unable to coerce <class 'sage.matrix.matrix_symbolic_dense.Matrix_symbolic_dense'> to an integer","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","Cell \u001b[0;32mIn [17], line 2\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;66;03m# Exercise 4 (c): Fill in entries for A and B to find a counterexample.\u001b[39;00m\n\u001b[0;32m----> 2\u001b[0m A \u001b[38;5;241m=\u001b[39m \u001b[43mMatrix\u001b[49m\u001b[43m(\u001b[49m\u001b[43mZZ\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m[\u001b[49m\u001b[43m[\u001b[49m\u001b[43m_\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m_\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m_\u001b[49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m[\u001b[49m\u001b[43m_\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m_\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m_\u001b[49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m[\u001b[49m\u001b[43m_\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m_\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m_\u001b[49m\u001b[43m]\u001b[49m\u001b[43m]\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m      3\u001b[0m B \u001b[38;5;241m=\u001b[39m Matrix(ZZ, [[_, _, _], [_, _, _], [_, _, _]])\n\u001b[1;32m      5\u001b[0m A\u001b[38;5;241m.\u001b[39mdeterminant() \u001b[38;5;241m-\u001b[39m B\u001b[38;5;241m.\u001b[39mdeterminant() \u001b[38;5;241m==\u001b[39m (A\u001b[38;5;241m-\u001b[39mB)\u001b[38;5;241m.\u001b[39mdeterminant()\n","File \u001b[0;32m/ext/sage/10.1/src/sage/matrix/constructor.pyx:643\u001b[0m, in \u001b[0;36msage.matrix.constructor.matrix\u001b[0;34m()\u001b[0m\n\u001b[1;32m    641\u001b[0m \"\"\"\n\u001b[1;32m    642\u001b[0m immutable = kwds.pop('immutable', False)\n\u001b[0;32m--> 643\u001b[0m M = MatrixArgs(*args, **kwds).matrix()\n\u001b[1;32m    644\u001b[0m if immutable:\n\u001b[1;32m    645\u001b[0m     M.set_immutable()\n","File \u001b[0;32m/ext/sage/10.1/src/sage/matrix/args.pyx:668\u001b[0m, in \u001b[0;36msage.matrix.args.MatrixArgs.matrix\u001b[0;34m()\u001b[0m\n\u001b[1;32m    666\u001b[0m             break\n\u001b[1;32m    667\u001b[0m else:\n\u001b[0;32m--> 668\u001b[0m     M = self.space(self, coerce=convert)\n\u001b[1;32m    669\u001b[0m \n\u001b[1;32m    670\u001b[0m # Also store the matrix to support multiple calls of matrix()\n","File \u001b[0;32m/ext/sage/10.1/src/sage/structure/parent.pyx:903\u001b[0m, in \u001b[0;36msage.structure.parent.Parent.__call__\u001b[0;34m()\u001b[0m\n\u001b[1;32m    901\u001b[0m         return mor._call_(x)\n\u001b[1;32m    902\u001b[0m     else:\n\u001b[0;32m--> 903\u001b[0m         return mor._call_with_args(x, args, kwds)\n\u001b[1;32m    904\u001b[0m \n\u001b[1;32m    905\u001b[0m raise TypeError(_LazyString(\"No conversion defined from %s to %s\", (R, self), {}))\n","File \u001b[0;32m/ext/sage/10.1/src/sage/structure/coerce_maps.pyx:182\u001b[0m, in \u001b[0;36msage.structure.coerce_maps.DefaultConvertMap_unique._call_with_args\u001b[0;34m()\u001b[0m\n\u001b[1;32m    180\u001b[0m     print(type(C), C)\n\u001b[1;32m    181\u001b[0m     print(type(C._element_constructor), C._element_constructor)\n\u001b[0;32m--> 182\u001b[0m raise\n\u001b[1;32m    183\u001b[0m \n\u001b[1;32m    184\u001b[0m \n","File \u001b[0;32m/ext/sage/10.1/src/sage/structure/coerce_maps.pyx:172\u001b[0m, in \u001b[0;36msage.structure.coerce_maps.DefaultConvertMap_unique._call_with_args\u001b[0;34m()\u001b[0m\n\u001b[1;32m    170\u001b[0m         return C._element_constructor(x)\n\u001b[1;32m    171\u001b[0m     else:\n\u001b[0;32m--> 172\u001b[0m         return C._element_constructor(x, **kwds)\n\u001b[1;32m    173\u001b[0m else:\n\u001b[1;32m    174\u001b[0m     if len(kwds) == 0:\n","File \u001b[0;32m/ext/sage/10.1/src/sage/matrix/matrix_space.py:945\u001b[0m, in \u001b[0;36mMatrixSpace._element_constructor_\u001b[0;34m(self, entries, **kwds)\u001b[0m\n\u001b[1;32m    835\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_element_constructor_\u001b[39m(\u001b[38;5;28mself\u001b[39m, entries, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwds):\n\u001b[1;32m    836\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m    837\u001b[0m \u001b[38;5;124;03m    Construct an element of ``self`` from ``entries``.\u001b[39;00m\n\u001b[1;32m    838\u001b[0m \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    943\u001b[0m \u001b[38;5;124;03m        False\u001b[39;00m\n\u001b[1;32m    944\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m--> 945\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43melement_class\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mentries\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/ext/sage/10.1/src/sage/matrix/matrix_integer_dense.pyx:309\u001b[0m, in \u001b[0;36msage.matrix.matrix_integer_dense.Matrix_integer_dense.__init__\u001b[0;34m()\u001b[0m\n\u001b[1;32m    307\u001b[0m ma = MatrixArgs_init(parent, entries)\n\u001b[1;32m    308\u001b[0m cdef Integer z\n\u001b[0;32m--> 309\u001b[0m for t in ma.iter(coerce, True):\n\u001b[1;32m    310\u001b[0m     se = <SparseEntry>t\n\u001b[1;32m    311\u001b[0m     z = <Integer>se.entry\n","File \u001b[0;32m/ext/sage/10.1/src/sage/matrix/args.pyx:534\u001b[0m, in \u001b[0;36miter\u001b[0;34m()\u001b[0m\n\u001b[1;32m    532\u001b[0m x = next(it)\n\u001b[1;32m    533\u001b[0m if convert and self.need_to_convert(x):\n\u001b[0;32m--> 534\u001b[0m     x = self.base(x)\n\u001b[1;32m    535\u001b[0m if sparse:\n\u001b[1;32m    536\u001b[0m     yield make_SparseEntry(i, j, x)\n","File \u001b[0;32m/ext/sage/10.1/src/sage/structure/parent.pyx:901\u001b[0m, in \u001b[0;36msage.structure.parent.Parent.__call__\u001b[0;34m()\u001b[0m\n\u001b[1;32m    899\u001b[0m if mor is not None:\n\u001b[1;32m    900\u001b[0m     if no_extra_args:\n\u001b[0;32m--> 901\u001b[0m         return mor._call_(x)\n\u001b[1;32m    902\u001b[0m     else:\n\u001b[1;32m    903\u001b[0m         return mor._call_with_args(x, args, kwds)\n","File \u001b[0;32m/ext/sage/10.1/src/sage/structure/coerce_maps.pyx:163\u001b[0m, in \u001b[0;36msage.structure.coerce_maps.DefaultConvertMap_unique._call_\u001b[0;34m()\u001b[0m\n\u001b[1;32m    161\u001b[0m             print(type(C), C)\n\u001b[1;32m    162\u001b[0m             print(type(C._element_constructor), C._element_constructor)\n\u001b[0;32m--> 163\u001b[0m         raise\n\u001b[1;32m    164\u001b[0m \n\u001b[1;32m    165\u001b[0m cpdef Element _call_with_args(self, x, args=(), kwds={}):\n","File \u001b[0;32m/ext/sage/10.1/src/sage/structure/coerce_maps.pyx:158\u001b[0m, in \u001b[0;36msage.structure.coerce_maps.DefaultConvertMap_unique._call_\u001b[0;34m()\u001b[0m\n\u001b[1;32m    156\u001b[0m cdef Parent C = self._codomain\n\u001b[1;32m    157\u001b[0m try:\n\u001b[0;32m--> 158\u001b[0m     return C._element_constructor(x)\n\u001b[1;32m    159\u001b[0m except Exception:\n\u001b[1;32m    160\u001b[0m     if print_warnings:\n","File \u001b[0;32m/ext/sage/10.1/src/sage/rings/integer.pyx:710\u001b[0m, in \u001b[0;36msage.rings.integer.Integer.__init__\u001b[0;34m()\u001b[0m\n\u001b[1;32m    708\u001b[0m                 return\n\u001b[1;32m    709\u001b[0m \n\u001b[0;32m--> 710\u001b[0m             raise TypeError(\"unable to coerce %s to an integer\" % type(x))\n\u001b[1;32m    711\u001b[0m \n\u001b[1;32m    712\u001b[0m def __reduce__(self):\n","\u001b[0;31mTypeError\u001b[0m: unable to coerce <class 'sage.matrix.matrix_symbolic_dense.Matrix_symbolic_dense'> to an integer"]}},"pos":52,"start":1706663604711,"state":"done","type":"cell"}
{"exec_count":20,"id":"36f24c","input":"for a in range(-10, 10):\n    for b in range(-10, 10):\n        for c in range(-10, 10):\n            for d in range(-10, 10):\n                A = Matrix(ZZ, [[a,b],[c,d]])\n                # Skip the all zeroes matrix.\n                if a == 0 and b == 0 and c == 0 and d == 0:\n                    continue\n                # In order for this to hold, we need det(A) == 0.\n                if 3*det(A) == det(3*A) and det(A) != 0:\n                    print(\"Example found!\\n\", A)","kernel":"sage-10.1","pos":53,"state":"done","type":"cell"}
{"id":"346e54","input":"","pos":51,"type":"cell"}
{"id":"551046","input":"","pos":44.5,"type":"cell"}
{"id":"58f385","input":"elementary_matrix?","pos":18,"type":"cell"}
{"id":"859c5b","input":"","pos":54,"type":"cell"}
{"id":"92ecaf","input":"","pos":31.5,"type":"cell"}
{"id":"c77b21","input":"","pos":29.75,"type":"cell"}
{"id":"dfa829","input":"","pos":47.5,"type":"cell"}
{"id":0,"time":1709196176358,"type":"user"}
{"last_load":1707242763880,"type":"file"}